-- Create Databases
CREATE DATABASE EmployeeDB;
CREATE DATABASE RBAC_DB;

-- Employee Data Table
USE EmployeeDB;
CREATE TABLE employees (
    employee_id INT PRIMARY KEY, 
    first_name VARCHAR(100), 
    last_name VARCHAR(100), 
    job_title VARCHAR(100), 
    salary DECIMAL(10, 2), 
    role_id INT
);
INSERT INTO employees VALUES 
(1, 'Alice', 'Johnson', 'Software Engineer', 75000, 1), 
(2, 'Bob', 'Smith', 'Data Scientist', 85000, 2), 
(3, 'Charlie', 'Brown', 'Web Developer', 65000, 3);

-- Roles & Permissions Table
USE RBAC_DB;
CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50));
CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(100));
CREATE TABLE role_permissions (role_id INT, permission_id INT, 
    FOREIGN KEY (role_id) REFERENCES roles(role_id), 
    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id));

-- Insert Roles & Permissions
INSERT INTO roles VALUES 
(1, 'Admin'), (2, 'Manager'), (3, 'Employee');
INSERT INTO permissions VALUES 
(1, 'View Employee Data'), (2, 'Update Employee Data'), (3, 'Delete Employee Data');
INSERT INTO role_permissions VALUES 
(1, 1), (1, 2), (1, 3),  -- Admin has all permissions
(2, 1), (2, 2),           -- Manager can view and update
(3, 1);                   -- Employee can only view

-- Queries:
-- Get all employees with their roles
USE EmployeeDB;
SELECT e.first_name, e.last_name, r.role_name 
FROM employees e 
JOIN RBAC_DB.roles r ON e.role_id = r.role_id;

-- Check Admin Permissions
USE RBAC_DB;
SELECT p.permission_name 
FROM role_permissions rp 
JOIN permissions p ON rp.permission_id = p.permission_id 
WHERE rp.role_id = 1;

-- Get permissions for a specific employee (ID=1)
SELECT p.permission_name 
FROM role_permissions rp 
JOIN permissions p ON rp.permission_id = p.permission_id 
JOIN employees e ON e.role_id = rp.role_id 
WHERE e.employee_id = 1;
